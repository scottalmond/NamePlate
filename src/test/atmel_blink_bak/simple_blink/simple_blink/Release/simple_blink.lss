
simple_blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000126  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_info   00001c4d  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00001ac8  00000000  00000000  00001e39  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000151  00000000  00000000  00003901  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000c0f  00000000  00000000  00003a52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  14:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  18:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  1c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  28:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  30:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  34:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  38:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  3c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  44:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  4c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  50:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  54:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  58:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  5c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  60:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  64:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  68:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  6c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  70:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  74:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  78:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	cd bf       	out	0x3d, r28	; 61
  84:	df e3       	ldi	r29, 0x3F	; 63
  86:	de bf       	out	0x3e, r29	; 62
  88:	0e 94 4c 00 	call	0x98	; 0x98 <main>
  8c:	0c 94 91 00 	jmp	0x122	; 0x122 <_exit>

00000090 <__bad_interrupt>:
  90:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000094 <atmel_start_init>:
  94:	0c 94 83 00 	jmp	0x106	; 0x106 <system_init>

00000098 <main>:
  98:	0e 94 4a 00 	call	0x94	; 0x94 <atmel_start_init>
  9c:	0f 9a       	sbi	0x01, 7	; 1
  9e:	2a e2       	ldi	r18, 0x2A	; 42
  a0:	8c e2       	ldi	r24, 0x2C	; 44
  a2:	9a e0       	ldi	r25, 0x0A	; 10
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0xc>
  ac:	00 00       	nop
  ae:	0f 98       	cbi	0x01, 7	; 1
  b0:	2a e2       	ldi	r18, 0x2A	; 42
  b2:	8c e2       	ldi	r24, 0x2C	; 44
  b4:	9a e0       	ldi	r25, 0x0A	; 10
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	90 40       	sbci	r25, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x1e>
  be:	00 00       	nop
  c0:	ed cf       	rjmp	.-38     	; 0x9c <main+0x4>

000000c2 <BOD_init>:
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	08 95       	ret

000000c6 <CLKCTRL_init>:
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	08 95       	ret

000000ca <CPUINT_init>:
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	08 95       	ret

000000ce <mcu_init>:
  ce:	e0 e1       	ldi	r30, 0x10	; 16
  d0:	f4 e0       	ldi	r31, 0x04	; 4
  d2:	80 81       	ld	r24, Z
  d4:	88 60       	ori	r24, 0x08	; 8
  d6:	81 93       	st	Z+, r24
  d8:	e8 31       	cpi	r30, 0x18	; 24
  da:	84 e0       	ldi	r24, 0x04	; 4
  dc:	f8 07       	cpc	r31, r24
  de:	c9 f7       	brne	.-14     	; 0xd2 <mcu_init+0x4>
  e0:	e0 e3       	ldi	r30, 0x30	; 48
  e2:	f4 e0       	ldi	r31, 0x04	; 4
  e4:	80 81       	ld	r24, Z
  e6:	88 60       	ori	r24, 0x08	; 8
  e8:	81 93       	st	Z+, r24
  ea:	e8 33       	cpi	r30, 0x38	; 56
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	f8 07       	cpc	r31, r24
  f0:	c9 f7       	brne	.-14     	; 0xe4 <mcu_init+0x16>
  f2:	e0 e5       	ldi	r30, 0x50	; 80
  f4:	f4 e0       	ldi	r31, 0x04	; 4
  f6:	80 81       	ld	r24, Z
  f8:	88 60       	ori	r24, 0x08	; 8
  fa:	81 93       	st	Z+, r24
  fc:	e8 35       	cpi	r30, 0x58	; 88
  fe:	84 e0       	ldi	r24, 0x04	; 4
 100:	f8 07       	cpc	r31, r24
 102:	c9 f7       	brne	.-14     	; 0xf6 <mcu_init+0x28>
 104:	08 95       	ret

00000106 <system_init>:
 106:	0e 94 67 00 	call	0xce	; 0xce <mcu_init>
 10a:	0f 98       	cbi	0x01, 7	; 1
 10c:	07 9a       	sbi	0x00, 7	; 0
 10e:	0e 94 63 00 	call	0xc6	; 0xc6 <CLKCTRL_init>
 112:	0e 94 65 00 	call	0xca	; 0xca <CPUINT_init>
 116:	0e 94 8f 00 	call	0x11e	; 0x11e <SLPCTRL_init>
 11a:	0c 94 61 00 	jmp	0xc2	; 0xc2 <BOD_init>

0000011e <SLPCTRL_init>:
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	08 95       	ret

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
